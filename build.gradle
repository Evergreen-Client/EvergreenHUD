plugins {
    id 'java'
    id 'net.minecraftforge.gradle.forge' version '8708bf3e0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

version = '2.0-RC.2'
group = 'co.uk.isxander'
archivesBaseName = 'evergreenhud'

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    runDir = 'run'
    mappings = 'stable_22'

    replace('@BUILD_VER@', project.version)

    makeObfSourceJar = false
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    provided files('libs/modcore.jar')
    provided files('libs/xanderlib.jar')
}

def evergreenArchiveName = "EvergreenHUD (${minecraft.version}-${project.version})"

jar {
    archiveName = "${evergreenArchiveName}.jar"
    enabled = false

    manifest {
        attributes (
                'FMLAT': 'evergreenhud_at.cfg',
                'FMLCorePlugin': 'co.uk.isxander.evergreenhud.forge.FMLLoadingPlugin',
                'ModSide': 'CLIENT',
                'FMLCorePluginContainsFMLMod': 'Yes, yes it does'
        )
    }
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

// Forge does not import resources properly.
task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

tasks.moveResources.dependsOn processResources
tasks.classes.dependsOn moveResources

shadowJar {
    archiveBaseName.set(evergreenArchiveName)
    archiveVersion.set('')
    archiveClassifier.set('')

    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

reobfJar.dependsOn tasks.shadowJar